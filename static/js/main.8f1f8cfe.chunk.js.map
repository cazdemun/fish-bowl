{"version":3,"sources":["hooks/useLocalStorage.js","Routines.jsx","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","cardRoutinesStyle","minWidth","margin","flex","wordBreak","dataSource","name","points","children","OneShotButton","props","used","setUsed","disabled","onClick","Routines","drawSlip","mode","setMode","Form","useForm","form","storedRaw","setStoredRaw","columns","title","dataIndex","render","_","record","_columns","useEffect","resetFields","onSubmit","values","raw","map","res","message","success","SwitchModeExtra","style","icon","BorderlessTableOutlined","EditOutlined","extra","tableLayout","expandable","indentSize","defaultExpandAllRows","onFinish","initialValues","color","Item","TextArea","autoSize","onChange","e","validateRaw","target","textAlign","className","htmlType","SaveOutlined","Header","Layout","Footer","Content","probability","n","Math","random","Promise","resolve","reject","mi","ma","min","ceil","max","floor","randomInt","createRegister","date","Date","point","timestamp","now","dateToString","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","h","hour","minute","placeholder","defaultValue","cardStyle","AppContent","exp","setExp","lastSlip","setLastSlip","history","setHistory","offset","span","width","padding","justifyContent","then","maybePoints","newRegister","catch","err","Array","keys","pagination","defaultPageSize","App","collapsed","state","setState","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","fontWeight","minHeight","overflowY","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.8f1f8cfe.chunk.js","sourcesContent":["// Taken from: https://usehooks.com/useLocalStorage/\r\nimport { useState } from 'react';\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Table, Input, Form, message } from 'antd';\r\nimport { EditOutlined, SaveOutlined, BorderlessTableOutlined } from '@ant-design/icons';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nconst cardRoutinesStyle = {\r\n  minWidth: \"500px\",\r\n  margin: \"5px\",\r\n  flex: \"1\",\r\n  wordBreak: \"break-all\",\r\n}\r\n\r\n// type Routine = Single | Group\r\n// type Group = Category | Separator\r\n// * Single routines have points\r\n// * Group routines have children\r\nconst dataSource = [\r\n  {\r\n    key: \"Meditar\",\r\n    name: \"Meditar\",\r\n    points: 1\r\n  },\r\n  {\r\n    key: \"Lavar\",\r\n    name: \"Lavar\",\r\n    children: [\r\n      {\r\n        key: \"Lavar cara\",\r\n        name: \"Lavar cara\",\r\n        points: 1\r\n      },\r\n      {\r\n        key: \"Lavar Pelo\",\r\n        name: \"Lavar Pelo\",\r\n        points: 1\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: \"Ejercicio\",\r\n    name: \"Ejercicio\",\r\n    points: 1\r\n  },\r\n  {\r\n    key: \"Trabajo\",\r\n    name: \"Trabajo\",\r\n    points: 3\r\n  }\r\n];\r\n\r\nconst OneShotButton = (props) => {\r\n  const [used, setUsed] = useState(false)\r\n  return <Button disabled={used} onClick={() => {\r\n    setUsed(true);\r\n    props.onClick()\r\n  }} >{props.children}</Button>\r\n}\r\n\r\nconst _columns = (drawSlip) => [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Points',\r\n    dataIndex: 'points',\r\n    key: 'points',\r\n  },\r\n  {\r\n    title: '',\r\n    dataIndex: 'draw',\r\n    key: 'draw',\r\n    render: (_, record) => record.children ? null : <OneShotButton onClick={() => drawSlip(record.name, record.points)}>Draw</OneShotButton>,\r\n  },\r\n];\r\n\r\nconst Routines = ({ drawSlip = (name, points) => { console.log(\"Not implemented!\", name, points) } }) => {\r\n  // mode: table | raw | error\r\n  const [mode, setMode] = useState('table')\r\n  const [form] = Form.useForm();\r\n  const [storedRaw, setStoredRaw] = useLocalStorage('fish-bowl-routines-raw', JSON.stringify(dataSource, null, 2))\r\n  const columns = _columns(drawSlip);\r\n\r\n  const validateRaw = raw => {\r\n    try {\r\n      JSON.parse(raw)\r\n      setMode('raw')\r\n    } catch {\r\n      console.log(\"Invalid JSON!\")\r\n      setMode('error')\r\n    }\r\n  }\r\n\r\n  // This is a way to 'format' the json when saving\r\n  useEffect(() => {\r\n    if (mode === \"raw\" || mode === \"error\")\r\n      form.resetFields(); // since default values are the same as the changed one, this one hack works\r\n  }, [storedRaw])\r\n\r\n  const onSubmit = values => {\r\n    [values.raw]\r\n      .map(JSON.parse)\r\n      .map(res => JSON.stringify(res, null, 2))\r\n      .map(setStoredRaw)\r\n      .map(message.success(\"Routines saved!\"))\r\n  }\r\n\r\n  const SwitchModeExtra = ({ mode, setMode }) => <>\r\n    <Button\r\n      style={{ margin: \"0\" }}\r\n      disabled={mode === 'table' || mode === 'error'}\r\n      onClick={() => setMode('table')}\r\n      icon={<BorderlessTableOutlined />} />\r\n    <Button\r\n      style={{ margin: \"0\" }}\r\n      disabled={mode === 'raw' || mode === 'error'}\r\n      onClick={() => setMode('raw')}\r\n      icon={<EditOutlined />} />\r\n  </>\r\n\r\n  return <Card\r\n    title=\"Routines\"\r\n    style={cardRoutinesStyle}\r\n    extra={< SwitchModeExtra mode={mode} setMode={setMode} />}>\r\n    {(() => {\r\n      switch (mode) {\r\n        case 'table':\r\n          return <Table\r\n            tableLayout=\"fixed\"\r\n            expandable={{ indentSize: 4, defaultExpandAllRows: true }}\r\n            columns={columns}\r\n            dataSource={JSON.parse(storedRaw)} />\r\n        case 'raw':\r\n        case 'error':\r\n          return < Form form={form}\r\n            name=\"routines-raw\"\r\n            onFinish={onSubmit}\r\n            initialValues={{ 'raw': storedRaw }\r\n            }>\r\n            {mode === \"error\" && <p style={{ color: \"red\" }}> Invalid JSON! </p>}\r\n            <Form.Item name='raw'>\r\n              <Input.TextArea\r\n                autoSize\r\n                onChange={(e) => validateRaw(e.target.value)} />\r\n            </Form.Item>\r\n            {mode === \"error\" && <p style={{ color: \"red\" }}> Invalid JSON! </p>}\r\n            <Form.Item style={{ textAlign: 'right' }}>\r\n              <Button\r\n                className=\"bg-secondary btn-fix\"\r\n                disabled={(mode === \"table\" || mode === \"error\")}\r\n                htmlType=\"submit\"\r\n                icon={<SaveOutlined />} />\r\n            </Form.Item>\r\n          </Form >\r\n        default:\r\n          break;\r\n      }\r\n    })()}\r\n  </Card >\r\n}\r\n\r\nexport default Routines;","import React, { useState } from \"react\";\r\nimport { Layout, Row, Card, Button, Table, Col, Input } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n} from '@ant-design/icons';\r\nimport Routines from \"./Routines\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nconst probability = n => !!n && Math.random() <= n;\r\n\r\nfunction randomInt(mi, ma) {\r\n  const min = Math.ceil(mi);\r\n  const max = Math.floor(ma);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\n// maybe exp\r\nconst drawSlip = () =>\r\n  new Promise((resolve, reject) => {\r\n    if (probability(0.45)) {\r\n      resolve(0);\r\n    }\r\n    if (probability(0.95)) {\r\n      resolve(randomInt(1, 21));\r\n    } else {\r\n      resolve(100);\r\n    }\r\n  });\r\n\r\nconst createRegister = (points, name = \"\") =>\r\n  new Promise((resolve, reject) => {\r\n    const date = new Date();\r\n    resolve({\r\n      key: Math.random(),\r\n      point: points === 0 ? 'Keep up the good work!' : points,\r\n      timestamp: Date.now(),\r\n      date: dateToString(date),\r\n      name: name\r\n    });\r\n  });\r\n\r\nconst dateToString = d => {\r\n  const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\r\n  const mo = new Intl.DateTimeFormat(\"en\", { month: \"2-digit\" }).format(d);\r\n  const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\r\n\r\n  const h = new Intl.DateTimeFormat(\"en\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\"\r\n  }).format(d);\r\n\r\n  return `${da}-${mo}-${ye} ${h}`;\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Date',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n  },\r\n  {\r\n    title: 'Routine',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: (_, record) => <Input placeholder='Enter routine name' defaultValue={record.name} />\r\n  },\r\n  {\r\n    title: 'Points',\r\n    dataIndex: 'point',\r\n    key: 'point',\r\n  }\r\n]\r\n\r\nconst cardStyle = {\r\n  minWidth: \"500px\",\r\n  margin: \"5px\",\r\n  flex: \"1\",\r\n  wordBreak: \"break-all\",\r\n  textAlign: \"center\"\r\n}\r\n\r\nconst AppContent = () => {\r\n  const [exp, setExp] = useState(0);\r\n  const [lastSlip, setLastSlip] = useState(\"Keep up the good work!\");\r\n  const [history, setHistory] = useState([]);\r\n\r\n  return <Col offset={4 / 2} span={20} style={{ width: \"100%\", padding: \"5px\" }}>\r\n    <Card title=\"Bowl\" style={cardStyle}>\r\n      <h1>Current exp:</h1>\r\n      <p>{exp}</p>\r\n      <h1>Last slip:</h1>\r\n      <p>{lastSlip}</p>\r\n      <Row style={{ justifyContent: \"center\" }}>\r\n        <Button\r\n          className=\"bg-secondary mx-3 mb-5 mt-3 px-5 py-2 font-bold\"\r\n          onClick={() =>\r\n            drawSlip()\r\n              .then(maybePoints => {\r\n                if (maybePoints === 0) {\r\n                  setLastSlip(\"Keep up the good work!\");\r\n                } else {\r\n                  setLastSlip(maybePoints);\r\n                  setExp(exp + maybePoints);\r\n                }\r\n                return createRegister(maybePoints);\r\n              })\r\n              .then(newRegister => {\r\n                setHistory([...history, newRegister]);\r\n              })\r\n              .catch(err => console.log(err))\r\n          }\r\n        >\r\n          Draw a slip!\r\n          </Button>\r\n        <Button\r\n          className=\"bg-secondary mx-3 mb-5 mt-3 px-5 py-2 font-bold\"\r\n          onClick={() => {\r\n            setHistory([]);\r\n            setExp(0);\r\n            setLastSlip(\"Keep up the good work!\");\r\n          }}\r\n        >\r\n          Clear\r\n          </Button>\r\n      </Row>\r\n    </Card>\r\n    <Routines drawSlip={(name, points) => {\r\n      [...Array(points).keys()]\r\n        .map(_ =>\r\n          drawSlip()\r\n            .then(maybePoints => {\r\n              if (maybePoints === 0) {\r\n                setLastSlip(\"Keep up the good work!\");\r\n              } else {\r\n                setLastSlip(maybePoints);\r\n                setExp(exp + maybePoints);\r\n              }\r\n              return createRegister(maybePoints, name);\r\n            })\r\n            .then(newRegister => {\r\n              setHistory([...history, newRegister]);\r\n            })\r\n            .catch(err => console.log(err)));\r\n    }} />\r\n    <Card title=\"History\" style={cardStyle}>\r\n      <Table tableLayout=\"fixed\" pagination={{ defaultPageSize: 5 }} columns={columns} dataSource={history} />\r\n    </Card>\r\n  </Col>\r\n}\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState({ collapsed: false });\r\n\r\n  return (\r\n    <Layout className=\"site-layout\">\r\n      <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n        {React.createElement(state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n          className: 'trigger',\r\n          onClick: () => setState({ collapsed: !state.collapsed }),\r\n        })}\r\n        <h1 style={{ flex: \"1\", color: \"white\", fontWeight: \"bold\", textAlign: \"center\" }}>Fish Bowl (Beta)</h1>\r\n      </Header>\r\n      <Content\r\n        style={{\r\n          padding: 24,\r\n          minHeight: 280,\r\n          overflowY: \"auto\"\r\n        }}\r\n      >\r\n        <AppContent />\r\n      </Content>\r\n      <Footer style={{ textAlign: \"right\", fontWeight: \"bold\" }}>Created by cazdemun</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// import \"./tailwind.generated.css\";\r\n// import \"./tailwind.extras.css\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}